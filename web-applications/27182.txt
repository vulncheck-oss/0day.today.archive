id: 27182
date: 03/03/2017
title: WordPress Simple Ads Manager 2.9.8.125 PHP Object Injection Vulnerability
author: Yorick Koster
cves: 

------------------------------------------------------------------------
Simple Ads Manager WordPress plugin unauthenticated PHP Object injection
vulnerability
------------------------------------------------------------------------
Yorick Koster, July 2016

------------------------------------------------------------------------
Abstract
------------------------------------------------------------------------
A PHP Object injection vulnerability was found in the Simple Ads Manager
WordPress plugin. The unauthenticated PHP Object injection vulnerability
can be used by an unautenthicated user to instantiate arbitrary PHP
Objects. This issue can potentially result in arbitrary code execution,
but this has not been confirmed.

------------------------------------------------------------------------
OVE ID
------------------------------------------------------------------------
OVE-20160712-0041

------------------------------------------------------------------------
Tested versions
------------------------------------------------------------------------
This issue was succesfully tested on the Simple Ads Manager WordPress
plugin version 2.9.8.125.

------------------------------------------------------------------------
Fix
------------------------------------------------------------------------
There is currently no fix available.

------------------------------------------------------------------------
Details
------------------------------------------------------------------------
https://sumofpwn.nl/advisory/2016/simple_ads_manager_wordpress_plugin_unauthenticated_php_object_injection_vulnerability.html

This issue is possible due to two unsafe calls to unserialize() in the sam-ajax-loader.php file. The input is taken directly from the POST request as can be seen in the following code fragment:

sam-ajax-loader.php:

if ( in_array( $action, $allowed_actions ) ) {
   switch ( $action ) {
      case 'sam_ajax_load_place':
         echo json_encode( array( 'success' => false, 'error' => 'Deprecated...' ) );
         break;
   
      case 'sam_ajax_load_ads':
         if ( ( isset( $_POST['ads'] ) && is_array( $_POST['ads'] ) ) && isset( $_POST['wc'] ) ) {
            $clauses = unserialize( base64_decode( $_POST['wc'] ) );

This issue can potentially result in arbitrary code execution, but this has not been confirmed.

#  0day.today [2023-03-23]  #